version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: singlebrief_postgres
    environment:
      POSTGRES_USER: singlebrief
      POSTGRES_PASSWORD: singlebrief_dev
      POSTGRES_DB: singlebrief
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U singlebrief"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: singlebrief_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: singlebrief_backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: singlebrief_frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm run dev
    restart: unless-stopped

  # Celery Worker
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: singlebrief_celery_worker
    environment:
      - ENVIRONMENT=development
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.workers.celery_app worker --loglevel=info
    restart: unless-stopped

  # Celery Flower (Task Monitoring)
  celery-flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: singlebrief_celery_flower
    ports:
      - "5555:5555"
    environment:
      - ENVIRONMENT=development
      - REDIS_HOST=redis
    volumes:
      - ./backend:/app
    depends_on:
      - redis
    command: celery -A app.workers.celery_app flower --port=5555
    restart: unless-stopped
    
  # Nginx Web Server
  nginx:
    image: nginx:1.25-alpine
    container_name: singlebrief_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: singlebrief_network